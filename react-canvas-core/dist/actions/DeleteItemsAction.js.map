{"version":3,"file":"DeleteItemsAction.js","sourceRoot":"","sources":["../../src/actions/DeleteItemsAction.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAe,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAExE,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AACtC,OAAO,QAAQ,MAAM,gBAAgB,CAAC;AAYtC;;GAEG;AACH,MAAM,OAAO,iBAAkB,SAAQ,MAAM;IAC5C,YAAY,UAAoC,EAAE;QACjD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAE;QACnC,MAAM,SAAS,mBACd,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,KAAK,EACf,MAAM,EAAE,KAAK,EACb,OAAO,EAAE,KAAK,IACX,OAAO,CAAC,SAAS,CACpB,CAAC;QAEF,KAAK,CAAC;YACL,IAAI,EAAE,SAAS,CAAC,QAAQ;YACxB,IAAI,EAAE,CAAC,KAAiC,EAAE,EAAE;gBAC3C,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;gBAEpE,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC;oBACrG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE;wBAChE,yCAAyC;wBACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;4BACvB,KAAK,CAAC,MAAM,EAAE,CAAC;wBAChB,CAAC;oBACF,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;gBAC7B,CAAC;YACF,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { Action, ActionEvent, InputType } from '../core-actions/Action';\r\nimport { KeyboardEvent } from 'react';\r\nimport _forEach from 'lodash/forEach';\r\nimport _isEqual from 'lodash/isEqual';\r\n\r\nexport interface DeleteItemsActionOptions {\r\n\tkeyCodes?: number[];\r\n\tmodifiers?: {\r\n\t\tctrlKey?: boolean;\r\n\t\tshiftKey?: boolean;\r\n\t\taltKey?: boolean;\r\n\t\tmetaKey?: boolean;\r\n\t};\r\n}\r\n\r\n/**\r\n * Deletes all selected items\r\n */\r\nexport class DeleteItemsAction extends Action {\r\n\tconstructor(options: DeleteItemsActionOptions = {}) {\r\n\t\tconst keyCodes = options.keyCodes ;\r\n\t\tconst modifiers = {\r\n\t\t\tctrlKey: false,\r\n\t\t\tshiftKey: false,\r\n\t\t\taltKey: false,\r\n\t\t\tmetaKey: false,\r\n\t\t\t...options.modifiers\r\n\t\t};\r\n\r\n\t\tsuper({\r\n\t\t\ttype: InputType.KEY_DOWN,\r\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\r\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\r\n\r\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\r\n\t\t\t\t\t_forEach(this.engine.getModel().getSelectedEntities(), (model) => {\r\n\t\t\t\t\t\t// only delete items which are not locked\r\n\t\t\t\t\t\tif (!model.isLocked()) {\r\n\t\t\t\t\t\t\tmodel.remove();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.engine.repaintCanvas();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"]}