{"version":3,"file":"Action.js","sourceRoot":"","sources":["../../src/core-actions/Action.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAIrC,MAAM,CAAN,IAAY,SAWX;AAXD,WAAY,SAAS;IACpB,sCAAyB,CAAA;IACzB,kCAAqB,CAAA;IACrB,sCAAyB,CAAA;IACzB,wCAA2B,CAAA;IAC3B,wCAA2B,CAAA;IAC3B,kCAAqB,CAAA;IACrB,8BAAiB,CAAA;IACjB,wCAA2B,CAAA;IAC3B,oCAAuB,CAAA;IACvB,sCAAyB,CAAA;AAC1B,CAAC,EAXW,SAAS,KAAT,SAAS,QAWpB;AAyBD,MAAM,OAAO,MAAM;IAKlB,YAAY,OAAsB;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,SAAS,CAAC,MAAS;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;CACD","sourcesContent":["import { MouseEvent, KeyboardEvent, WheelEvent, TouchEvent, SyntheticEvent } from 'react';\r\nimport { Toolkit } from '../Toolkit';\r\nimport { CanvasEngine } from '../CanvasEngine';\r\nimport { BaseModel } from '../core-models/BaseModel';\r\n\r\nexport enum InputType {\r\n\tMOUSE_DOWN = 'mouse-down',\r\n\tMOUSE_UP = 'mouse-up',\r\n\tMOUSE_MOVE = 'mouse-move',\r\n\tMOUSE_LEAVE = 'mouse-leave',\r\n\tMOUSE_WHEEL = 'mouse-wheel',\r\n\tKEY_DOWN = 'key-down',\r\n\tKEY_UP = 'key-up',\r\n\tTOUCH_START = 'touch-start',\r\n\tTOUCH_END = 'touch-end',\r\n\tTOUCH_MOVE = 'touch-move'\r\n}\r\n\r\nexport interface Mapping {\r\n\t[InputType.MOUSE_DOWN]: MouseEvent;\r\n\t[InputType.MOUSE_UP]: MouseEvent;\r\n\t[InputType.MOUSE_MOVE]: MouseEvent;\r\n\t[InputType.MOUSE_LEAVE]: MouseEvent;\r\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\r\n\t[InputType.KEY_DOWN]: KeyboardEvent;\r\n\t[InputType.KEY_UP]: KeyboardEvent;\r\n\t[InputType.TOUCH_START]: TouchEvent;\r\n\t[InputType.TOUCH_END]: TouchEvent;\r\n\t[InputType.TOUCH_MOVE]: TouchEvent;\r\n}\r\n\r\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\r\n\tevent: Event;\r\n\tmodel?: Model;\r\n}\r\n\r\nexport interface ActionOptions {\r\n\ttype: InputType;\r\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\r\n}\r\n\r\nexport class Action<T extends CanvasEngine = CanvasEngine> {\r\n\toptions: ActionOptions;\r\n\tid: string;\r\n\tengine: T;\r\n\r\n\tconstructor(options: ActionOptions) {\r\n\t\tthis.options = options;\r\n\t\tthis.id = Toolkit.UID();\r\n\t}\r\n\r\n\tsetEngine(engine: T) {\r\n\t\tthis.engine = engine;\r\n\t}\r\n}\r\n"]}