{"version":3,"file":"LinkWidget.js","sourceRoot":"","sources":["../../../src/entities/link/LinkWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { DiagramEngine } from '../../DiagramEngine';\r\nimport { LinkModel } from './LinkModel';\r\nimport { PointModel } from './PointModel';\r\nimport _map from 'lodash/map';\r\nimport { LabelWidget } from '../label/LabelWidget';\r\nimport { BaseEntityEvent, BasePositionModel, ListenerHandle, PeformanceWidget } from '@projectstorm/react-canvas-core';\r\nimport { PortModel } from '../port/PortModel';\r\n\r\nexport interface LinkProps {\r\n\tlink: LinkModel;\r\n\tdiagramEngine: DiagramEngine;\r\n}\r\n\r\nexport interface LinkState {\r\n\tsourcePort: PortModel;\r\n\ttargetPort: PortModel;\r\n}\r\n\r\nexport class LinkWidget extends React.Component<LinkProps, LinkState> {\r\n\tsourceListener: ListenerHandle;\r\n\ttargetListener: ListenerHandle;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsourcePort: null,\r\n\t\t\ttargetPort: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillUnmount(): void {\r\n\t\tif (this.sourceListener) {\r\n\t\t\tthis.sourceListener.deregister();\r\n\t\t}\r\n\t\tif (this.targetListener) {\r\n\t\t\tthis.targetListener.deregister();\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(nextProps: LinkProps, prevState: LinkState): LinkState {\r\n\t\treturn {\r\n\t\t\tsourcePort: nextProps.link.getSourcePort(),\r\n\t\t\ttargetPort: nextProps.link.getTargetPort()\r\n\t\t};\r\n\t}\r\n\r\n\tinstallTarget() {\r\n\t\tthis.targetListener && this.targetListener.deregister();\r\n\r\n\t\tif (!this.props.link.getTargetPort()) return;\r\n\t\tthis.targetListener = this.props.link.getTargetPort().registerListener({\r\n\t\t\treportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinstallSource() {\r\n\t\tthis.sourceListener && this.sourceListener.deregister();\r\n\r\n\t\tif (!this.props.link.getSourcePort()) return;\r\n\t\tthis.sourceListener = this.props.link.getSourcePort().registerListener({\r\n\t\t\treportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {\r\n\t\t\t\tthis.forceUpdate();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<LinkProps>, prevState: Readonly<LinkState>, snapshot) {\r\n\t\tif (prevState.sourcePort !== this.state.sourcePort) {\r\n\t\t\tthis.installSource();\r\n\t\t}\r\n\t\tif (prevState.targetPort !== this.state.targetPort) {\r\n\t\t\tthis.installTarget();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static generateLinePath(firstPoint: PointModel, lastPoint: PointModel): string {\r\n\t\treturn `M${firstPoint.getX()},${firstPoint.getY()} L ${lastPoint.getX()},${lastPoint.getY()}`;\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tif (this.props.link.getSourcePort()) {\r\n\t\t\tthis.installSource();\r\n\t\t}\r\n\t\tif (this.props.link.getTargetPort()) {\r\n\t\t\tthis.installTarget();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { link } = this.props;\r\n\r\n\t\t// only draw the link when we have reported positions\r\n\t\tif (link.getSourcePort() && !link.getSourcePort().reportedPosition) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (link.getTargetPort() && !link.getTargetPort().reportedPosition) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t//generate links\r\n\t\treturn (\r\n\t\t\t<PeformanceWidget model={this.props.link} serialized={this.props.link.serialize()}>\r\n\t\t\t\t{() => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<g \r\n\t\t\t\t\t\tdata-linkid={this.props.link.getID()}\r\n\t\t\t\t\t\tonContextMenu={(e)=>{\r\n\t\t\t\t\t\t\tconsole.log('context',e);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{this.props.diagramEngine.generateWidgetForLink(link)}\r\n\t\t\t\t\t\t\t{_map(this.props.link.getLabels(), (labelModel, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<LabelWidget\r\n\t\t\t\t\t\t\t\t\t\tkey={labelModel.getID()}\r\n\t\t\t\t\t\t\t\t\t\tengine={this.props.diagramEngine}\r\n\t\t\t\t\t\t\t\t\t\tlabel={labelModel}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</PeformanceWidget>\r\n\t\t);\r\n\t}\r\n}\r\n"]}